package TutorialWeek3;

public class StringManipulation {
	public static void main(String[] args) {
		String str1="JAVA is fun with MUHTAR:)";
		String str2="Java is fun with Muhtar:)";
		String str3=" ";
		String str4="	I want to trim my string, 	but how?	";			
		String str5="JAVA is fun with MUHTAR:)";
		System.out.println(str1.length());//==>25
		
		System.out.println(""+str1.charAt(0)+str1.charAt(1));//==>???
		System.out.println(str1.indexOf('A'));
		int num=4;
		System.out.println(str1.indexOf('A', str1.indexOf('A')+4));
		System.out.println(str1.lastIndexOf("A"));
		System.out.println(str1.indexOf("is fun"));
//		//System.out.println(str1.substring( , )); //==> How to extract only "with" and the rest?
//		//System.out.println(str1.substring( , )); //==> How to extract 3rd character(including) and the rest?
//		
//		System.out.println(str1.toLowerCase());
//		System.out.println(str1.toUpperCase()); 
//		System.out.println(str1);//==> Is it going to be full upper case or it will stay as it is? 
//								 //==> Give printer example: Rephrase, print, close the file  without save...
//		boolean b1=str1==str2; 					//==>???
//		System.out.println(b1);
//		boolean b2=str1.equals(str2);			//==>???
//		System.out.println(b2);
//		boolean b3=str1.equalsIgnoreCase(str2);	//==>???
//		System.out.println(b3);
//		
//		
//		System.out.println(str1.startsWith("j"));
//		System.out.println(str1.startsWith("JAVA"));
//		// How to find whether str1 equals to str5 without using .equals method? 
//		System.out.println(str3.isEmpty());
//		System.out.println(str3.isBlank());
//		System.out.println(str3.trim());
//		System.out.println(str3.isEmpty());
//		System.out.println(str4.trim());
//		System.out.println(str1.startsWith(str5));
//		System.out.println(str1.contains(str5));
//		System.out.println(str1.toLowerCase().contains(str2.toLowerCase()));
//		
//		String dup="AAAABBBBnnnnhhhRRRRRkkkkyuiop";
//		String removeDuplicates="";
//		for (int i = 0; i < dup.length(); i++) {
//			if(!removeDuplicates.contains(dup.substring(i,i+1))) {
//				removeDuplicates+=dup.substring(i,i+1);
//			}
//		}
//		System.out.println(removeDuplicates);

	}

}
